/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hostelmanagementsystem;

import bean.RoomBean;
import db.DBConnection;
import db.DBOperations;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author RG
 */
public class HostelRoomFrame extends javax.swing.JFrame {

    /**
     * Creates new form HostelRoomFrame
     */
    
    
    RoomBean bean=null;
    ArrayList alst=null;
     String header[]={"Number ","Active", "Room Status"};
    public HostelRoomFrame() {
        initComponents();
        setVisible(true);
        setSize(700,500);
        setBounds(450,130, 700,500);
   
       // setLocationRelativeTo(null);
        setDefaultCloseOperation(HIDE_ON_CLOSE);
        displayRoomRecord();
         
        
    }
    public void displayRoomRecord()
    {
       
        DBOperations obj = new DBOperations();
        alst = obj.getAllRoomRecord();
     
        if(alst.size()>0)
        {
          
            Object data[][] = new Object[alst.size()][3];
            for(int i=0;i<alst.size();i++)
            {  RoomBean bean1 = (RoomBean)alst.get(i);
                data[i][0]= bean1.getRoomNo();
                data[i][1]= bean1.getActive();
                data[i][2]= bean1.getStatus();
                  
            }
         DefaultTableModel model = new DefaultTableModel(data, header);
            
         tblRoom.setModel(model);
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtUpdateRoomNo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        chkActivateUpdateRoom = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        btnSearchRoom = new javax.swing.JButton();
        txtSaveRoomNo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        chkActivateSaveRoom = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRoom = new javax.swing.JTable();
        btnSaveRoom = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        btnUpdateRoom = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(700, 500));
        getContentPane().setLayout(null);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 51, 51));
        jLabel4.setText("Update OR Delete Room");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(10, 120, 181, 22);

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("Room No.");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(10, 150, 95, 26);
        getContentPane().add(txtUpdateRoomNo);
        txtUpdateRoomNo.setBounds(100, 160, 74, 20);

        jLabel6.setText("Activate or Deactivate");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(321, 70, 140, 26);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 51));
        jLabel1.setText("Add New Room");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 20, 115, 22);

        chkActivateUpdateRoom.setText("Yes");
        getContentPane().add(chkActivateUpdateRoom);
        chkActivateUpdateRoom.setBounds(490, 150, 80, 23);

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Room No.");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 66, 95, 26);

        btnSearchRoom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/search.png"))); // NOI18N
        btnSearchRoom.setText("Search");
        btnSearchRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchRoomActionPerformed(evt);
            }
        });
        getContentPane().add(btnSearchRoom);
        btnSearchRoom.setBounds(200, 150, 100, 29);
        getContentPane().add(txtSaveRoomNo);
        txtSaveRoomNo.setBounds(109, 70, 80, 20);

        jLabel7.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel7.setText("All Rooms");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(270, 240, 136, 29);

        jLabel3.setText("Activate or Deactivate");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(320, 150, 150, 26);
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(10, 220, 700, 30);

        chkActivateSaveRoom.setText("Yes");
        getContentPane().add(chkActivateSaveRoom);
        chkActivateSaveRoom.setBounds(490, 70, 80, 23);

        tblRoom.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Number", "Active", "Room Status"
            }
        ));
        jScrollPane1.setViewportView(tblRoom);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(0, 270, 716, 402);

        btnSaveRoom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/save.png"))); // NOI18N
        btnSaveRoom.setText("Save");
        btnSaveRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveRoomActionPerformed(evt);
            }
        });
        getContentPane().add(btnSaveRoom);
        btnSaveRoom.setBounds(590, 70, 110, 29);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(10, 113, 706, 10);

        btnUpdateRoom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Update & Delete Student.png"))); // NOI18N
        btnUpdateRoom.setText("Update");
        btnUpdateRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateRoomActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdateRoom);
        btnUpdateRoom.setBounds(360, 180, 110, 30);

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/delete.png"))); // NOI18N
        btnDelete.setText("Delete");
        getContentPane().add(btnDelete);
        btnDelete.setBounds(560, 180, 110, 29);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/pages background.jpg"))); // NOI18N
        jLabel8.setText("jLabel8");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(0, 0, 730, 520);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveRoomActionPerformed
        // TODO add your handling code here:
        
        String room_no= txtSaveRoomNo.getText();
        Boolean active=chkActivateSaveRoom.isEnabled();
        Boolean status=false;
        
        RoomBean bean = new RoomBean();
        bean.setRoomNo(room_no);
        bean.setActive(active);
        bean.setStatus(status);
        
        DBOperations objDB = new DBOperations();
       String result = objDB.insertRoomRecord(bean);
        if(result.equals("valid"))
        {
            JOptionPane.showMessageDialog(null, "Room Detail is inserted");
            txtSaveRoomNo.setText("");
            chkActivateSaveRoom.setEnabled(false);
             displayRoomRecord();
        }
        
        
    }//GEN-LAST:event_btnSaveRoomActionPerformed

    private void btnSearchRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchRoomActionPerformed
        // TODO add your handling code here:
          DBOperations objDB = new DBOperations();
            String room_no= txtUpdateRoomNo.getText();
  
          if(room_no!=null)
          {
              
               RoomBean bean = objDB.getRoomById(room_no);
               if(bean!=null)
               {
                   
         
                   chkActivateUpdateRoom.setSelected(bean.getActive());
                   Object data[][] = new Object[1][3];
                  
                    data[0][0] = bean.getRoomNo();
                    data[0][1] = bean.getActive();
                    data[0][2] = bean.getStatus();

                
                   DefaultTableModel model = new DefaultTableModel(data, header);

                    tblRoom.setModel(model);
               }
               else
               {
                   JOptionPane.showMessageDialog(null,"This Room ID does not exist ");
               }
               
            
        }
            
      
        
        
    }//GEN-LAST:event_btnSearchRoomActionPerformed

    private void btnUpdateRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateRoomActionPerformed
        // TODO add your handling code here:
        
         DBOperations objDB = new DBOperations();
        String id =txtUpdateRoomNo.getText();
        Boolean active = chkActivateUpdateRoom.isEnabled();
        if(id!= null)
        {
             RoomBean bean22= objDB.getRoomById(id);
            if(bean22.getStatus()==true)
            {
                JOptionPane.showMessageDialog(null,"Room Is already booked, cannot update ");
            }
            else
            {
                 RoomBean bean = new RoomBean();
                 bean.setRoomNo(id);
                 bean.setActive(active);
                 bean.setStatus(bean22.getStatus());

                 if(id!=null)
                 {
                    String result = objDB.updateRoomRecord(bean);
                    if(result.equals("updated"))
                    {
                         JOptionPane.showMessageDialog(null,"Room detail Is updated ");
                    }
                 }

              }
        }
        
    }//GEN-LAST:event_btnUpdateRoomActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HostelRoomFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HostelRoomFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HostelRoomFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HostelRoomFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HostelRoomFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSaveRoom;
    private javax.swing.JButton btnSearchRoom;
    private javax.swing.JButton btnUpdateRoom;
    private javax.swing.JCheckBox chkActivateSaveRoom;
    private javax.swing.JCheckBox chkActivateUpdateRoom;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable tblRoom;
    private javax.swing.JTextField txtSaveRoomNo;
    private javax.swing.JTextField txtUpdateRoomNo;
    // End of variables declaration//GEN-END:variables
}
